{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Device.js","Components/Videos.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Loader","map","movie","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","Component","TVPresenter","show","original_name","first_air_date","TVContainer","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","size","device","phone","tabPort","tabLand","bigDesktop","VideoContainer","Video","iframe","h4","Videos","videos","video","index","src","controls","frameborder","allowfullscreen","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","request","React","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a738f43e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\n\nconst Container = styled.div`\n    :not(:last-child) {\n        margin-bottom: 50px\n    }\n`\n\nconst Title = styled.span`\n    font-size: 14px\n    font-weight: 600\n`\n\nconst Grid = styled.div`\n    margin-top: 25px\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 125px);\n    grid-gap: 25px;\n`\n\nconst Section = ({ title, children }) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n)\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n}\n\nexport default Section","import React from 'react'\nimport styled from \"styled-components\"\n\nconst Container = styled.div`\n    height: 100vh\n    width: 100vw\n    display: flex\n    justify-content: center\n    font-size: 28px\n    margin-top: 20px\n`\n\nexport default () => (\n    <Container>\n        <span role=\"img\" aria-label=\"Loading...\">\n            ⏰\n        </span>\n    </Container>\n)\n","import React from 'react'\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\n\nconst Container = styled.div`\n    width: 100vw\n    display: flex\n    justify-content: center \n`\n\nconst Text = styled.span`\n    color: ${props => props.color}\n    font-weight: 600\n`\n\nconst Message = ({ text, color }) => (\n    <Container>\n        <Text color={color}>{text}</Text>\n    </Container>\n)\n\nMessage.propTypes = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n}\n\nexport default Message","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"react-router-dom\"\nimport styled from \"styled-components\"\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};\nexport default Poster;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport styled from \"styled-components\"\nimport Section from \"../../Components/Section\"\nimport Loader from \"../../Components/Loader\"\nimport Message from \"../../Components/Message\"\nimport Poster from \"../../Components/Poster\"\n\nconst Container = styled.div`\n    padding: 20px;\n`\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => \n    <>\n        <Helmet>\n            <title>Movies | Samflix</title>\n        </Helmet>\n        {loading ? (<Loader />) : (\n        <Container>\n            <Helmet>\n                <title>Movies | Samflix</title>\n            </Helmet>\n            {nowPlaying && nowPlaying.length > 0 && (\n                <Section title=\"Now Playing\">\n                    {nowPlaying.map(movie => (\n                        <Poster \n                            key={movie.id}\n                            id={movie.id} \n                            imageUrl={movie.poster_path}\n                            title={movie.original_title}\n                            rating={movie.vote_average} \n                            year={movie.release_date.substring(0, 4)}\n                            isMovie={true}\n                            \n                        />\n                    ))}\n                </Section>\n            )}\n\n            {upcoming && upcoming.length > 0 && (\n                <Section title=\"Upcoming Movies\">\n                    {upcoming.map(movie => (\n                        <Poster \n                            key={movie.id}\n                            id={movie.id} \n                            imageUrl={movie.poster_path}\n                            title={movie.original_title}\n                            rating={movie.vote_average} \n                            year={movie.release_date.substring(0, 4)}\n                            isMovie={true}\n                            \n                        />\n                    ))}\n                </Section>\n            )}\n\n            {popular && popular.length > 0 && (\n                <Section title=\"Popular Movies\">\n                    {popular.map(movie => (\n                        <Poster \n                            key={movie.id}\n                            id={movie.id} \n                            imageUrl={movie.poster_path}\n                            title={movie.original_title}\n                            rating={movie.vote_average} \n                            year={movie.release_date.substring(0, 4)}\n                            isMovie={true}\n                            \n                        /> \n                    ))}\n                </Section>\n            )}  \n            {error && <Message color=\"#e74c3c\" text={error} />}\n                \n        </Container>\n    )}\n    </>\n\n    \n\nHomePresenter.propTypes = {\n    nowPlaying: PropTypes.array,\n    popular: PropTypes.array,\n    upcoming: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n}\n\nexport default HomePresenter","import axios from 'axios'\n\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: \"7b215692e27f768ce340b89564e74c72\",\n        language: \"en-US\"\n    }\n})\n\nexport const moviesApi = {\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upcoming: () => api.get(\"movie/upcoming\"),\n    popular: () => api.get(\"movie/popular\"),\n    movieDetail: id => \n        api.get(`movie/${id}`, {\n            params: {\n                append_to_response: \"videos\"\n            }\n    }),\n    search: term => \n        api.get(\"search/movie\", {\n            params: {\n                query: encodeURIComponent(term)\n            }\n        })\n\n\n}\n\nexport const tvApi = {\n    topRated: () => api.get(\"tv/top_rated\"),\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    showDetail: id => \n        api.get(`tv/${id}`, {\n            params: {\n                append_to_response: \"videos\"\n            }\n    }),\n    search: term => \n        api.get(\"search/tv\", {\n            params: {\n                query: encodeURIComponent(term)\n            }\n        })\n}","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer","import React, { Component } from \"react\";\nimport HomePresenter from \"./HomePresenter\"\nimport { moviesApi } from \"../../api\"\n\nexport default class extends Component {\n    state = {\n        nowPlaying: null,\n        upcoming: null,\n        popular: null,\n        error: null,\n        loading: true \n    }\n\n    async componentDidMount() {\n        try {\n            const { \n                data: { results: nowPlaying }\n            } = await moviesApi.nowPlaying()\n            \n            const { \n                data: { results: upcoming }\n            } = await moviesApi.upcoming()\n            \n            const {\n                data: { results: popular }\n            } = await moviesApi.popular()\n            //throw Error()\n            this.setState({\n                nowPlaying: nowPlaying,\n                upcoming: upcoming,\n                popular: popular\n            })\n\n        } catch {\n            this.setState({\n                error: \"Can't find movie infomation.\"\n            })\n\n        } finally {\n            this.setState({\n                loading: false\n            })\n        }\n\n    }\n\n    render() {\n        const { nowPlaying, upcoming, popular, error, loading } = this.state\n        //console.log(this.state)\n        return(\n            <HomePresenter \n                nowPlaying={nowPlaying}\n                upcoming={upcoming}\n                popular={popular}\n                error={error}\n                loading={loading}\n            />\n        )\n        \n    }\n}","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport styled from \"styled-components\"\nimport Section from \"../../Components/Section\"\nimport Loader from \"../../Components/Loader\"\nimport Message from \"../../Components/Message\"\nimport Poster from \"../../Components/Poster\"\n\nconst Container = styled.div`\n    padding: 20px\n`\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => \n    <>\n        <Helmet>\n            <title>TV Shows | Samflix</title>\n        </Helmet>\n        {\n            loading ? (<Loader />) : (\n                <Container>\n                    <Helmet>\n                        <title>TV Shows | Samflix</title>\n                    </Helmet>\n                    {topRated && topRated.length > 0 && (\n                        <Section title=\"Top Rated Shows\">\n                            {topRated.map(show => (\n                                <Poster\n                                    key={show.id}\n                                    id={show.id} \n                                    imageUrl={show.poster_path}\n                                    title={show.original_name}\n                                    rating={show.vote_average} \n                                    year={show.first_air_date.substring(0, 4)} \n                                \n                                /> \n                            ))}\n                        </Section>\n                    )}\n                    {popular && popular.length > 0 && (\n                        <Section title=\"Popular Shows\">\n                            {popular.map(show => (\n                                <Poster\n                                    key={show.id}\n                                    id={show.id} \n                                    imageUrl={show.poster_path}\n                                    title={show.original_name}\n                                    rating={show.vote_average} \n                                    year={show.first_air_date.substring(0, 4)} \n                                \n                                /> \n                            )\n                            )}\n                        </Section>\n                    )}\n                    {airingToday && airingToday.length > 0 && (\n                        <Section title=\"Airing Today\">\n                            {airingToday.map(show => (\n                                <Poster\n                                    key={show.id}\n                                    id={show.id} \n                                    imageUrl={show.poster_path}\n                                    title={show.original_name}\n                                    rating={show.vote_average} \n                                    year={show.first_air_date.substring(0, 4)} \n                                \n                                /> \n                            ))}\n                        </Section>\n                    )}\n        \n                    {error && <Message color=\"#e74c3c\" text={error} />}\n                </Container>\n            )\n        }\n    </>\n\n    \n\nTVPresenter.propTypes = {\n    topRated: PropTypes.array,\n    popular: PropTypes.array,\n    airingToday: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n}\n\nexport default TVPresenter","import TVContainer from \"./TVContainer\"\n\nexport default TVContainer","import React, { Component } from 'react'\nimport TVPresenter from \"./TVPresenter\"\nimport { tvApi } from \"api\"\n\nexport default class extends Component {\n    state = {\n        topRated: null,\n        popular: null,\n        airingToday: null,\n        loading: true,\n        error: null\n    }\n    \n    async componentDidMount() {\n        try {\n            const { \n                data: { results: topRated }\n            } = await tvApi.topRated()\n            \n            const { \n                data: { results: popular }\n            } = await tvApi.popular()\n            //throw Error()\n            const {\n                data: { results: airingToday }\n            } = await tvApi.airingToday()\n\n            this.setState({\n                topRated: topRated,\n                popular: popular,\n                airingToday: airingToday\n            })\n\n        } catch {\n            this.setState({\n                error: \"Can't find TV information.\"\n            })\n\n        } finally {\n            this.setState({\n                loading: false\n            })\n        }\n\n    }\n\n    render() {\n        const { topRated, popular, airingToday, loading, error } = this.state\n        return(\n            <TVPresenter \n                topRated={topRated}\n                popular={popular}\n                airingToday={airingToday}\n                loading={loading}\n                error={error}\n            />\n        )\n    }\n}","import React from \"react\"\nimport { Link, withRouter } from \"react-router-dom\"\nimport styled from 'styled-components'\n\nconst Header = styled.header`\n    color: white;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 50px;\n    display: flex;\n    align-items: center; \n    background-color: rgba(20, 20, 20, 0.8);\n    z-index: 10;\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8); \n`\n\nconst List = styled.ul`\n    display: flex;\n    \n`\nconst Item = styled.li`\n    width: 80px;\n    height: 50px;\n    text-align: center;\n    border-bottom: 3px solid ${props => (props.current ? \"#e67e22\" : \"transparent\")};\n    transition: border-bottom 0.5s ease-in-out;\n`\n\nconst SLink = styled(Link)`\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n\nexport default withRouter(({ location: { pathname } }) => (\n    <Header>\n        <List>\n            <Item current={pathname === \"/\"}>\n                <SLink to=\"/\">Movies</SLink>\n            </Item>\n            <Item current={pathname === \"/tv\"}>\n                <SLink to=\"/tv\">TV</SLink>\n            </Item>\n            <Item current={ pathname === \"/search\"}>\n                <SLink to=\"/search\">Search</SLink>\n            </Item>\n        </List>\n    </Header>\n))","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport styled from \"styled-components\"\nimport Loader from \"../../Components/Loader\"\nimport Section from \"../../Components/Section\"\nimport Message from \"../../Components/Message\"\nimport Poster from \"../../Components/Poster\"\n\nconst Container = styled.div`\n    padding: 0px 20px\n`\n\nconst Form = styled.form`\n    margin-bottom: 50px\n    width: 100%\n`\n\nconst Input = styled.input`\n    all: unset\n    font-size: 28px\n    width: 100%\n`\n\nconst SearchPresenter = ({ movieResults, tvResults, loading, searchTerm, handleSubmit, error, updateTerm }) => \n    <Container>\n        <Helmet>\n            <title>Search | Samflix</title>\n        </Helmet>\n        <Form onSubmit={handleSubmit}>\n            <Input placeholder=\"Search Movies or TV Shows...\"\n                   value={searchTerm} \n                   onChange={updateTerm}\n            />\n        </Form>\n        {loading ? (<Loader />) : (\n            <>\n                {movieResults && movieResults.length > 0 && (\n                    <Section title=\"Movie Result\">\n                        {movieResults.map(movie => (\n                            <Poster \n                                key={movie.id}\n                                id={movie.id} \n                                imageUrl={movie.poster_path}\n                                title={movie.original_title}\n                                rating={movie.vote_average} \n                                year={movie.release_date}\n                                isMovie={true}\n                                \n                            /> \n                        ))}\n                    </Section>\n                )}\n                {tvResults && tvResults.length > 0 && (\n                    <Section title=\"TV Show Result\">\n                        {tvResults.map(show => (\n                            <Poster\n                                key={show.id}\n                                id={show.id} \n                                imageUrl={show.poster_path}\n                                title={show.original_name}\n                                rating={show.vote_average} \n                                year={show.first_air_date} \n                            \n                            /> \n                        ))}\n                    </Section>\n                )}\n                {error && <Message color=\"#e74c3c\" text={error} />}\n                {tvResults && movieResults &&\n                    tvResults.length === 0 && movieResults.length === 0 && (\n                        <Message text=\"Noting found\" color=\"#95a5a6\" />\n                    )}\n            </>\n        )}\n    </Container>\n\nSearchPresenter.propTypes = {\n    movieResults: PropTypes.array,\n    tvResults: PropTypes.array,\n    error: PropTypes.string,\n    searchTerm: PropTypes.string,\n    loading: PropTypes.bool.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    updateTerm: PropTypes.func.isRequired\n\n    \n}\n\nexport default SearchPresenter","import SearchContainer from \"./SearchContainer\"\n\nexport default SearchContainer","import React, { Component } from 'react'\nimport SearchPresenter from \"./SearchPresenter\"\nimport { moviesApi, tvApi } from '../../api'\n\nexport default class extends Component {\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: \"\",\n        loading: false,\n        error: null\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        const { searchTerm } = this.state\n        if (searchTerm !== \"\") {\n            this.searchByTerm()\n        }\n    }\n\n    updateTerm = event => {\n        const {\n            target: { value }\n        } = event\n\n        this.setState({\n            searchTerm: value\n        })\n    }\n\n\n    searchByTerm = async () => {\n        const { searchTerm } = this.state\n        this.setState({ loading: true })\n        try {\n            //throw Error()\n            const {\n              data: { results: movieResults }\n            } = await moviesApi.search(searchTerm);\n            const {\n              data: { results: tvResults }\n            } = await tvApi.search(searchTerm);\n            //console.log({ movieResults, tvResults })\n            this.setState({\n              movieResults,\n              tvResults\n            });\n      \n\n        } catch {\n            this.setState({ error: \"Can't find results.\" })\n        } finally {\n            this.setState({ loading: false })\n        }\n    }\n    \n    render() {\n        const { movieResults, tvResults, searchTerm, loading, error } = this.state\n        return(\n            <SearchPresenter \n                movieResults={movieResults}\n                tvResults={tvResults}\n                searchTerm={searchTerm}\n                loading={loading}\n                error={error}\n                handleSubmit={this.handleSubmit}\n                updateTerm={this.updateTerm}\n            />\n        )\n    }\n}","// contains info for mediaquery\n\nconst size = {\n    phone: \"37.5em\",\n    tabPort: \"56.25em\",\n    tabLand: \"75em\",\n    bigDesktop: \"112.5em\"\n  };\n  const device = {\n    phone: `(max-width: ${size.phone})`,\n    tabPort: `(max-width: ${size.tabPort})`,\n    tabLand: `(max-width: ${size.tabLand})`,\n    bigDesktop: `(min-width: ${size.bigDesktop})`\n  };\n  \n  export default device;\n  ","import React from \"react\"\nimport device from \"./Device\"\nimport styled from \"styled-components\"\n\nconst Container = styled.div`\n  width: 100%\n`\nconst VideoContainer = styled.div`\n  display: grid\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 1.5rem\n  margin-bottom: 20px\n\n  @media ${device.tabPort} {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`;\nconst Video = styled.iframe`\n  height: 20rem\n  width: 100%\n\n  @media ${device.tabPort} {\n    width: 80%\n  }\n  @media ${device.phone} {\n    width: 100%\n  }\n`;\nconst Title = styled.h4`\n  width: 100%\n  font-size: 20px\n  font-weight: 300\n  margin-top: 20px\n  margin-bottom: 20px\n`;\n\nconst Videos = ({ videos }) => (\n  <Container>\n    <Title>Teasers</Title>\n\n    <VideoContainer>\n      {videos.length > 0 &&\n        videos.map((video, index) => {\n          if (index < 2) {\n            return (\n              <Video\n                key={index}\n                src={`https://www.youtube.com/embed/${video.key}`}\n                controls\n                frameborder=\"0\"\n                allowfullscreen\n              />\n            )\n          }\n        })}\n    </VideoContainer>\n  </Container>\n);\n\nexport default Videos\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport Loader from \"Components/Loader\"\nimport Helmet from \"react-helmet\"\nimport Videos from \"../../Components/Videos\";\nimport device from \"../../Components/Device\";\n\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n\n  @media ${device.tabPort} {\n    padding: 2rem;\n  }\n  @media ${device.phone} {\n    padding: 2rem 1rem;\n  }\n\n`\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 105%;\n  border-radius: 5px;\n\n  @media ${device.phone} {\n    width: 40%;\n  }\n`;\n\nconst Data = styled.div`\n    width: 70%\n    margin-left: 10px\n`\n\nconst Title = styled.h3`\n    font-size: 48px\n`\nconst ItemContainer = styled.div`\n    margin: 20px 0\n`\n\nconst Item = styled.span`\n\n`\n\nconst Divider = styled.span`\n    margin: 0 10px\n`\n\nconst Overview = styled.p`\n    font-size: 12px\n    opacity: 0.7\n    line-height: 1.5\n    width: 50%\n\n    @media ${device.tabLand} {\n        width: 100%;\n      }\n    @media ${device.phone} {\n    line-height: 1.2;\n    }\n`\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n    <Helmet>\n        <title>Loading | Samflix</title>\n    </Helmet>\n    <Loader />\n    </>\n  ) : (\n    <Container>\n        <Helmet>\n            <title>{result.original_title ? result.original_title : result.original_name} | Samflix</title>\n        </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n            <Title>\n                {result.original_title ? result.original_title : result.original_name}\n            </Title>\n            <ItemContainer>\n                <Item>\n                    {result.release_date ? result.release_date.substring(0, 4) : result.first_air_date.substring(0, 4)}\n                </Item>\n                <Divider>∙</Divider>\n                <Item>\n                    {result.runtime ? result.runtime : result.episode_run_time[0]} min\n                </Item>\n                <Divider>∙</Divider>\n                <Item>\n                    {result.genres && result.genres.map((genre, index) => \n                        index === result.genres.length - 1 ? genre.name : `${genre.name} / `)} \n                </Item>\n                <Divider>∙</Divider>\n                <Item>{`⭐️ ${result.vote_average} / 10 `}</Item>\n\n            </ItemContainer>\n            <Overview>{result.overview}</Overview>\n\n            {result.videos && result.videos.results.length > 0 && (\n              <Videos videos={result.videos.results} />\n            )}\n\n        </Data>\n      </Content>\n    </Container>\n  )\n    \n\nDetailPresenter.propTypes = {\n    result: PropTypes.object,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n}\n\nexport default DetailPresenter","import DetailContainer from './DetailContainer'\n\nexport default DetailContainer","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props)\n    const {\n      location: { pathname }\n    } = props\n\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\")\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props;\n\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        const request  = await moviesApi.movieDetail(parsedId);\n        result = request.data\n      } else {\n        const request  = await tvApi.showDetail(parsedId);\n        result = request.data\n      }\n      //console.log(result)\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}","import React from \"react\"\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\"\nimport Home from \"Routes/Home\"\nimport TV from \"Routes/TV\"\nimport Header from \"Components/Header\"\nimport Search from \"Routes/Search\"\nimport Detail from \"Routes/Detail\"\n\n\nexport default () => (\n    <Router>\n        <>\n          <Header />\n          <Switch>\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/tv\" component={TV} />\n              <Route path=\"/search\" component={Search} />\n              <Route path=\"/movie/:id\" component={Detail} />\n              <Route path=\"/show/:id\" component={Detail} />\n              <Redirect from=\"*\" to=\"/\" />\n          </Switch>\n        </>\n        \n    </Router>\n)\n\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyles;","import React, { Component } from 'react';\nimport Router from \"Components/Router\"\nimport GlobalStyles from \"Components/GlobalStyles\"\n\nclass App extends Component {\n  render() {\n    return  (\n      <>\n        <Router />\n        <GlobalStyles /> \n      </>\n    )\n    \n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport \"./api\"\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}